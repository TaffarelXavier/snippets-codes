{"version":3,"file":"static/webpack/static\\development\\pages\\[id].js.1ee7842cdd0164762060.hot-update.js","sources":["webpack:///./pages/.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\nconst ReactMarkdown = require('react-markdown');\r\nimport Form from 'react-bootstrap/Form';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport _escapeHtml from '../src/scapeHtml';\r\n\r\nconst Saida = ({titulo, descricao, codigo}) =>{\r\n  return (<>\r\n  <h3>Título:</h3>\r\n  <ReactMarkdown source={titulo} escapeHtml={false} />\r\n  <h3>Descrição:</h3>\r\n  <ReactMarkdown source={descricao} escapeHtml={false} />\r\n  <h3>Código:</h3>\r\n  <ReactMarkdown source={codigo} escapeHtml={false} /></>)\r\n}\r\n\r\nconst App = ({ note, ADDRESS_SERVE_ADONIS, info }) => {\r\n  const { note_id, note_title, note_code, note_description } = note;\r\n  const [titulo, setTitulo] = useState(note_title);\r\n  const [codigo, setCodigo] = useState(note_code);\r\n  const [description, setDescription] = useState(note_description);\r\n  const [inf, setInf] = useState(info);\r\n\r\n  function handlerChangeCodigo(ev) {\r\n    setCodigo(ev.target.value);\r\n  }\r\n\r\n  function handlerChangeTitulo(ev) {\r\n    setTitulo(ev.target.value);\r\n  }\r\n\r\n  function handlerChangeDescription(ev) {\r\n    setDescription(ev.target.value);\r\n  }\r\n\r\n  const handlerSave = () => {\r\n\r\n    fetch(`${ADDRESS_SERVE_ADONIS}/notes/${note_id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ note_id, titulo, codigo, description })\r\n    }).then(response => {\r\n      console.log(response);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row style={{ marginTop: 20 }}>\r\n        <Col>\r\n          <h1>Editar nota</h1>\r\n        </Col>\r\n      </Row>\r\n      <hr />\r\n      <Row>\r\n        <Col xs={8} md={8}>\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <h3>Título:</h3>\r\n            <Form.Control\r\n              as=\"input\"\r\n              rows=\"10\"\r\n              autoFocus\r\n              onChange={handlerChangeTitulo}\r\n              value={titulo}\r\n            />\r\n\r\n            <h3>Descrição:</h3>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"4\"\r\n              onChange={handlerChangeDescription}\r\n              value={description}\r\n            />\r\n\r\n            <h3>Código:</h3>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"10\"\r\n              onChange={handlerChangeCodigo}\r\n              value={codigo}\r\n            />\r\n          </Form.Group>\r\n          <hr />\r\n          <Button onClick={handlerSave}>Salvar</Button>\r\n        </Col>\r\n        <Col\r\n          xs={4}\r\n          md={4}\r\n          sm={4}\r\n          style={{ borderWidth: 0, borderColor: 'red', borderStyle: 'solid' }}\r\n        >\r\n          <Saida titulo={titulo} descricao={description} codigo={codigo} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nlet ADDRESS_SERVE_ADONIS = process.env.adonis_address;\r\n\r\nApp.getInitialProps = async function(context) {\r\n\r\n  const { id } = context.query;\r\n\r\n  const res = await fetch(`${ADDRESS_SERVE_ADONIS}/notes/${id}/edit`);\r\n\r\n  let note = await res.text();\r\n\r\n  if (note.length > 0) {\r\n\r\n    note = JSON.parse(note);\r\n\r\n    return { ADDRESS_SERVE_ADONIS, note, info: 'success' };\r\n\r\n  }\r\n\r\n  return { ADDRESS_SERVE_ADONIS, info: 'not_found' };\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAFA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AASA;AAVA;AAYA;AAAA;AAAA;AAAA;AACA;AAbA;AAAA;AAgBA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAkBA;;;;;A","sourceRoot":""}